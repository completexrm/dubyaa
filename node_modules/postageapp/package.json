{
  "name": "postageapp",
  "version": "1.1.2",
  "node": ">= 0.4.0",
  "homepage": "https://github.com/postageapp/postageapp-nodejs",
  "repository": {
    "type": "git",
    "url": "https://github.com/postageapp/postageapp-nodejs"
  },
  "author": {
    "name": "PostageApp",
    "url": "http://postageapp.com"
  },
  "contributors": [
    {
      "name": "Jon Lim",
      "email": "jon@postageapp.com",
      "url": "http://postageapp.com"
    }
  ],
  "description": "Node.JS package for sending emails through PostageApp",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/postageapp/postageapp-nodejs/blob/master/LICENSE"
    }
  ],
  "main": "index",
  "readme": "[PostageApp](http://postageapp.com) for Node.JS\n===================================================\n\nThis is a module for Node.JS that allows you to send emails with PostageApp service.\nPersonalized transactional email sending can be offloaded to PostageApp via the JSON based API.\n\n### [API Documentation](http://help.postageapp.com/faqs/api) &bull; [PostageApp FAQs](http://help.postageapp.com/faqs) &bull; [PostageApp Help Portal](http://help.postageapp.com)\n\nInstallation\n------------\n\n_Node Package Manager_\n\nIn your app directory type\n`npm install postageapp`\n\n_Manual_\n\n- Download this: https://github.com/postageapp/postageapp-nodejs/tarball/master\n- Unzip that download.\n- Copy the resulting folder to `node_modules`\n- Rename the folder you just copied to `postageapp`\n\n_GIT Submodule_\n\nIn your app directory type:\n<pre><code>git submodule add git@github.com:postageapp/postageapp-nodejs.git plugins/postage\ngit submodule init\ngit submodule update\n</code></pre>\n\n_GIT Clone_\n\nIn your `node_modules` directory type\n<pre><code>git clone git@github.com:postageapp/postageapp-nodejs.git postageapp</code></pre>\n\nSending a Message\n-----\nWhen you require the library, make sure to specify your API key:\n\n    var postageapp = require('postageapp')('YOUR API KEY HERE');\n\nAfter that, you should be good to go. Load the module in your app and call the `sendMessage` function. Here is a sample of how to use it:\n\n    var postageapp = require('postageapp')('YOUR API KEY HERE');\n    postageapp.sendMessage(options, function callback() {});\n\nThe `options` parameter on the `sendMessage()` function is a hash that contains all of the arguments that you will be using in your API call. Here is an example API call:\n\n\tvar options = {\n\t\trecipients: \"email@address.com\",\n\n\t\tsubject: \"Subject Line\",\n\t\tfrom: \"sender@example.org\",\n\n\t\tcontent: {\n\t\t\t'text/html': '<strong>Sample bold content.</strong>',\n\t\t\t'text/plain': 'Plain text goes here'\n\t\t}\n\t}\n\nYou can use any of the arguments available to [send_message.json](http://help.postageapp.com/kb/api/send_message) when creating this hash.\n\nRecipients can be passed along as a single string or as an array.\n\n    recipients: \"email@address.com\";\n    recipients: [\"email1@address.com\", \"email2@address.com\"];\n\nIf you wish to set Message Variables for each individual recipient, you just have to pass an array for each recipient.\n\n    recipients: {\n\t    \"email@example.com\": {\n\t\t    'variable': 'Value'\n\t    },\n\t    \"email2@example.com\": {\n\t\t    'variable': 'Another Value'\n\t    }\n    };\n\nContent will accept an array for HTML and plain text content.\n\n    content: {\n    \t'text/html': '<strong>Sample bold content.</strong>',\n    \t'text/plain': 'Plain text goes here'\n    };\n\nSubject and from can be simple strings.\n\n    subject: 'Subject Line';\n    from: 'sender@example.org';\n\nTemplates can be called by using the template slug from your PostageApp Projects.\n\n\ttemplate: 'sample_template';\n\nMessage Variables needs to have an array passed into it with the global variable names and values.\n\n    variables: {\n    \t'variable': 'Variable value',\n    \t'variable2': 'Another variable'\n    };\n\nSuccess and Error Callbacks\n-----\nThe `sendMessage()` function takes two callback arguments - success and error. Callbacks are used to tell the PostageApp Node.JS plugin to execute some other code as soon as it is finished with sending your emails to PostageApp (or when an error occurs).\n\n    var postageapp = require('postageapp')('YOUR API KEY HERE');\n    postageapp.sendMessage(options, function (response, object) {\n        console.log('HTTP Status code: ', response.statusCode);\n        console.log('Message UID', object.response.uid);\n    }, function (message, object) {\n        console.log('Ack! An error has occurred: ', message);\n    });\n\nGetting Account Info\n-----\nYou can get your PostageApp account info through the Node.JS plugin by using the `acountInfo()` function, which can be used as such:\n\n    var postageapp = require('postageapp')('YOUR API KEY HERE');\n    postageapp.accountInfo();\n\nYou can take a look at the documentation for [get_account_info.json](http://help.postageapp.com/kb/api/get_account_info) to learn about the typical response from the API server.\n\nGetting Message Status\n-----\nYou can the status of an individual message sent through PostageApp using the UID that your API call provides. The PostageApp Node.JS plugin creates a unique UID for each message sent through by using `Date.getTime()`. You then use that UID in `messageStatus()`.\n\n    var postageapp = require('postageapp')('YOUR API KEY HERE');\n    postageapp.messageStatus(options);\n\nThe `options` parameter in the `messageStatus()` function is a hash that contains one thing: the UID of the message you wish you retrieve.\n\n    var options = {\n      \tdesiredUID: 'message UID here',\n    }\n\nYou will receive a JSON string back from the API server that should look something like this:\n\n    {\"response\":{\"status\":\"ok\",\"uid\":\"message UID here\"},\"data\":{\"message_status\":{\"completed\":1}}}\n\nFor more information about formatting of recipients, templates and variables please see the [PostageApp documentation](http://help.postageapp.com/kb/api/send_message).\n",
  "_id": "postageapp@1.1.2",
  "dist": {
    "shasum": "8893aa4a235e866a0dbca4723007f5136a003c4f",
    "tarball": "http://registry.npmjs.org/postageapp/-/postageapp-1.1.2.tgz"
  },
  "_npmVersion": "1.1.61",
  "_npmUser": {
    "name": "jonlim",
    "email": "info@postageapp.com"
  },
  "maintainers": [
    {
      "name": "jonlim",
      "email": "jon@postageapp.com"
    }
  ],
  "directories": {},
  "_shasum": "8893aa4a235e866a0dbca4723007f5136a003c4f",
  "_from": "postageapp@",
  "_resolved": "https://registry.npmjs.org/postageapp/-/postageapp-1.1.2.tgz"
}
